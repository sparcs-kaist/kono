version: '3.7'

services:
  db_production:
    build: db/
    volumes:
      - data_production:/var/lib/mysql
    environment:
      DB_ENV: "production"
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
    secrets:
      - source: db_root_password_production
        target: db_root_password
      - source: db_dev_password_production
        target: db_dev_password
      - source: db_unauthorized_api_password_production
        target: db_unauthorized_api_password
      - source: db_authorized_api_password_production
        target: db_authorized_api_password

  api_production:
    depends_on:
      - maintainer
    restart: always
    build: kono-api/
    environment:
      HOST: "kono.sparcs.org"
      PORT: 4000
      DB_HOST: "db_production"
      DB_PORT: 3306
      DB_AUTH_USER: "api"
      DB_AUTH_PASSWORD_FILE: /run/secrets/db_authorized_api_password
      DB_USER: "unauthorized_api"
      DB_PASSWORD_FILE: /run/secrets/db_unauthorized_api_password
      DB_DATABASE: "kono"
      PASSWORD_KEY_FILE: /run/secrets/api_password_key
      JWT_KEY_FILE: /run/secrets/api_jwt_key
      UPLOAD_DIR: /usr/src/assets
    volumes:
      - api_build_production:/usr/src/app
      - api_log_production:/usr/src/log
      - app_static_production:/usr/src/assets
    secrets:
      - source: db_authorized_api_password_production
        target: db_authorized_api_password
      - source: db_unauthorized_api_password_production
        target: db_unauthorized_api_password
      - source: api_password_key_production
        target: api_password_key
      - source: api_jwt_key_production
        target: api_jwt_key

  nginx_production:
    depends_on:
      - maintainer
      - api_production
    restart: always
    build:
      context: nginx/
      dockerfile: production.Dockerfile
    volumes:
      - app_build_production:/usr/share/nginx/html
      - nginx_log_production:/var/log/nginx
      - app_static_production:/usr/share/nginx/assets

  db_dev:
    build: db/
    volumes:
      - data_dev:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      DB_ENV: "development"
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
    secrets:
      - source: db_root_password_stage
        target: db_root_password

  api_stage:
    depends_on:
      - maintainer
    restart: always
    build: kono-api/
    environment:
      HOST: "dev.kono.sparcs.org"
      PORT: 4000
      DB_HOST: "db_dev"
      DB_PORT: 3306
      DB_AUTH_USER: "api"
      DB_USER: "unauthorized_api"
      DB_DATABASE: "kono"
      PASSWORD_KEY_FILE: /run/secrets/api_password_key
      JWT_KEY_FILE: /run/secrets/api_jwt_key
      UPLOAD_DIR: /usr/src/assets
    volumes:
      - api_build_stage:/usr/src/app
      - api_log_stage:/usr/src/log
      - app_static_stage:/usr/src/assets
    secrets:
      - source: api_password_key_stage
        target: api_password_key
      - source: api_jwt_key_stage
        target: api_jwt_key

  nginx_stage:
    depends_on:
      - maintainer
      - api_stage
    restart: always
    build:
      context: nginx/
      dockerfile: stage.Dockerfile
    volumes:
      - app_build_stage:/usr/share/nginx/html
      - nginx_log_stage:/var/log/nginx
      - app_static_stage:/usr/share/nginx/assets

  judge:
    depends_on:
      - maintainer
    restart: always
    environment:
      WEBSOCKET_PORT: 7077
      HTTP_PORT: 7078
    build: kono-judge/
    ports:
      - "7077:7077"
    volumes:
      - judge:/usr/src/app

  nginx_general:
    depends_on:
      - nginx_production
      - nginx_stage
      - judge
    ports:
      - "80:80"
    restart: always
    build: nginx-general/

  maintainer:
    build:
      context: .
      dockerfile: maintainer.Dockerfile
    ports:
      - "8022:22"
    environment:
      GENERATE_SOURCEMAP: "false"
    volumes:
      - api_build_production:/usr/src/api-production/dist
      - api_log_production:/usr/src/log/api-production
      - app_build_production:/usr/src/app-production/build
      - nginx_log_production:/usr/src/log/nginx-production
      - api_build_stage:/usr/src/api-stage/dist
      - api_log_stage:/usr/src/log/api-stage
      - app_build_stage:/usr/src/app-stage/build
      - nginx_log_stage:/usr/src/log/nginx-stage
      - judge:/usr/src/judge

volumes:
  data_production:
  api_build_production:
  api_log_production:
  app_build_production:
  nginx_log_production:
  app_static_production:
  data_dev:
  api_build_stage:
  api_log_stage:
  app_build_stage:
  nginx_log_stage:
  app_static_stage:
  judge:

secrets:
  db_root_password_production:
    file: config/production/db_root_password
  db_dev_password_production:
    file: config/production/db_dev_password
  db_unauthorized_api_password_production:
    file: config/production/db_unauthorized_api_password
  db_authorized_api_password_production:
    file: config/production/db_authorized_api_password
  api_password_key_production:
    file: config/production/api_password_key
  api_jwt_key_production:
    file: config/production/api_jwt_key
  db_root_password_stage:
    file: config/stage/db_root_password
  api_password_key_stage:
    file: config/stage/api_password_key
  api_jwt_key_stage:
    file: config/stage/api_jwt_key

